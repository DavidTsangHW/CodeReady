Option Strict Off
Option Explicit On
Module Bas_VisualBasicProject
	Private Const ModuleName As String = "Bas_BuildVisualBasicProject"
	
	Public Function CreateVBProjectFolders(ByVal Path As String, ByVal ProjectName As String) As Boolean
		
		On Error GoTo ErrorHandler
		
        Call CreatePath(Path & "\" & ProjectName)
		
        Call CreatePath(Path & "\" & ProjectName & "\Source")
		
        Call CreatePath(Path & "\" & ProjectName & "\Source\Modules")
		
        Call CreatePath(Path & "\" & ProjectName & "\Source\Forms")
		
		CreateVBProjectFolders = True
		
		Exit Function
		
ErrorHandler: 
		
		MsgBox(Err.Description, MsgBoxStyle.Critical)
		
		CreateVBProjectFolders = False
		
	End Function
	
	Public Function CreateVBProjectFile(ByVal Path As String, ByVal ProjectName As String, ByVal SchemaRs As ADODB.Recordset, ByVal CN As ADODB.Connection) As Boolean
		
		Dim WriteTs As Scripting.TextStream
		WriteTs = Fso.OpenTextFile(Path & "\" & ProjectName & ".vbp", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("Type=Exe")
		
		WriteTs.WriteLine("Reference=*\G{00020430-0000-0000-C000-000000000046}#2.0#0#C:\WINDOWS\system32\stdole2.tlb#OLE Automation")
		
		WriteTs.WriteLine("Reference=*\G{2A75196C-D9EB-4129-B803-931327F72D5C}#2.8#0#C:\Program Files\Common Files\system\ado\msado15.dll#Microsoft ActiveX Data Objects 2.8 Library")
		
		WriteTs.WriteLine("Form=Forms\MDIForm1.frm")
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				WriteTs.WriteLine("Form=Forms\Frm" & SchemaRs.Fields("table_name").Value & ".frm")
				
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					WriteTs.WriteLine("Form=Forms\Frm" & SchemaRs.Fields("table_name").Value & ".frm")
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		WriteTs.WriteLine("Reference=*\G{56BF9020-7A2F-11D0-9482-00A0C91110ED}#1.0#0#C:\WINDOWS\system32\MSBIND.DLL#Microsoft Data Binding Collection VB 6.0 (SP4)")
		
		WriteTs.WriteLine("Module=Bas_Database; Modules\Bas_Database.bas")
		
		WriteTs.WriteLine("Form=Forms\frmAbout.frm")
		
		WriteTs.WriteLine(" Object={831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.0#0; MSCOMCTL.OCX")
		
		WriteTs.WriteLine("Object={F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0; COMDLG32.OCX")
		
		WriteTs.WriteLine("IconForm=""MDIForm1""")
		
		WriteTs.WriteLine("Startup=""MDIForm1""")
		
		WriteTs.WriteLine("HelpFile=""""")
		
		WriteTs.WriteLine("Title=""Program Title""")
		
		WriteTs.WriteLine("Command32=""""")
		
		WriteTs.WriteLine("Name=""ProjectName""")
		
		WriteTs.WriteLine("HelpContextID=""0""")
		
		WriteTs.WriteLine("CompatibleMode=""0""")
		
		WriteTs.WriteLine("MajorVer=1")
		
		WriteTs.WriteLine("MinorVer=0")
		
		WriteTs.WriteLine("RevisionVer=0")
		
		WriteTs.WriteLine("AutoIncrementVer=0")
		
		WriteTs.WriteLine("ServerSupportFiles=0")
		
		WriteTs.WriteLine("VersionComments=""Code Generated by CodeReady""")
		
		WriteTs.WriteLine("VersionCompanyName=""Harvesoft""")
		
		WriteTs.WriteLine("VersionLegalCopyright=""(C)" & Year(Now) & """")
		
		WriteTs.WriteLine("VersionProductName=""Program Title""")
		
		WriteTs.WriteLine("CompilationType=0")
		
		WriteTs.WriteLine("OptimizationType=0")
		
		WriteTs.WriteLine("FavorPentiumPro(tm)=0")
		
		WriteTs.WriteLine("CodeViewDebugInfo=0")
		
		WriteTs.WriteLine("NoAliasing=0")
		
		WriteTs.WriteLine("BoundsCheck=0")
		
		WriteTs.WriteLine("OverflowCheck=0")
		
		WriteTs.WriteLine("FlPointCheck=0")
		
		WriteTs.WriteLine("FDIVCheck=0")
		
		WriteTs.WriteLine("UnroundedFP=0")
		
		WriteTs.WriteLine("StartMode=0")
		
		WriteTs.WriteLine("Unattended=0")
		
		WriteTs.WriteLine("Retained=0")
		
		WriteTs.WriteLine("ThreadPerObject=0")
		
		WriteTs.WriteLine("MaxNumberOfThreads=1")
		
		WriteTs.WriteLine("DebugStartupOption=0")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("[MS Transaction Server]")
		
		WriteTs.WriteLine("AutoRefresh=1")
		
		WriteTs.Close()
		
		CreateVBProjectFile = True
		
		
	End Function
	
	
	Public Function CreateVBModuleFile(ByVal Path As String, ByVal ConnectionString As String) As Boolean
		
		Dim WriteTs As Scripting.TextStream
		WriteTs = Fso.OpenTextFile(Path & "\Bas_Database.bas", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("Attribute VB_Name = ""Bas_Database""")
		
		WriteTs.WriteLine("Public CN As New ADODB.Connection")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Public Const ConnectionString = """ & ConnectionString & """")
		
		WriteTs.WriteLine("")
		
		WriteTs.Close()
		
		CreateVBModuleFile = True
		
	End Function
	
	Public Function CreateVBWorkSpace(ByVal Path As String, ByVal ProjectName As String, ByVal SchemaRs As ADODB.Recordset, ByVal CN As ADODB.Connection) As Boolean
		
		
		Dim WriteTs As Scripting.TextStream
		WriteTs = Fso.OpenTextFile(Path & "\" & ProjectName & ".vbw", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("MDIForm1 = 66, 87, 613, 543, Z, 44, 58, 591, 514, C")
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				WriteTs.WriteLine("Frm" & SchemaRs.Fields("table_name").Value & " = 154, 203, 559, 659, , 110, 145, 657, 601, C")
				
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					WriteTs.WriteLine("Frm" & SchemaRs.Fields("table_name").Value & " = 154, 203, 559, 659, , 110, 145, 657, 601, C")
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		WriteTs.WriteLine("Bas_Database = 44, 58, 501, 514, C")
		
		WriteTs.WriteLine("frmAbout = 44, 58, 501, 514, , 66, 87, 523, 543, C")
		
		WriteTs.Close()
		
		'UPGRADE_NOTE: Object WriteTs may not be destroyed until it is garbage collected. Click for more: 'ms-help://MS.VSCC.v90/dv_commoner/local/redirect.htm?keyword="6E35BFF6-CD74-4B09-9689-3E1A43DF8969"'
		WriteTs = Nothing
		
		CreateVBWorkSpace = True
		
	End Function
	
	Public Function CreateVBProjectEditForms(ByVal Path As String, ByVal ProjectName As String, ByVal SchemaRs As ADODB.Recordset, ByVal CN As ADODB.Connection) As Boolean
		
		Dim Rs As New ADODB.Recordset
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				Rs.Open("select * from [" & SchemaRs.Fields("table_name").Value & "]", CN, 1, 1)
				
				Call CreateVBProjectEditForm(Path, "frm" & SchemaRs.Fields("table_name").Value, Rs)
				
				Rs.Close()
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					Rs.Open("select * from [" & SchemaRs.Fields("table_name").Value & "]", CN, 1, 1)
					
					Call CreateVBProjectEditForm(Path, "frm" & SchemaRs.Fields("table_name").Value, Rs)
					
					Rs.Close()
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		
	End Function
	
	
	Public Function CreateVBProjectLookupForms(ByVal Path As String, ByVal ProjectName As String, ByVal SchemaRs As ADODB.Recordset, ByVal CN As ADODB.Connection) As Boolean
		
		Dim Rs As New ADODB.Recordset
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				Rs.Open("select * from [" & SchemaRs.Fields("table_name").Value & "]", CN, 1, 1)
				
				Call CreateVBProjectLookupForm(Path, "frm" & SchemaRs.Fields("table_name").Value, Rs)
				
				Rs.Close()
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					Rs.Open("select * from [" & SchemaRs.Fields("table_name").Value & "]", CN, 1, 1)
					
					Call CreateVBProjectLookupForm(Path, "frm" & SchemaRs.Fields("table_name").Value, Rs)
					
					Rs.Close()
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		
	End Function
	
	Private Function CreateVBProjectEditForm(ByVal Path As String, ByVal FormName As String, ByVal Rs As ADODB.Recordset) As Object
		Dim Fieldidx As Double
		Dim lblfield As String
		Dim txtfield As String
		
		Dim txtrs As String
		Dim WriteTs As Scripting.TextStream
		
		On Error GoTo ErrorHandler
		
		WriteTs = Fso.OpenTextFile(Path & "\" & FormName & ".frm", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("VERSION 5.00")
		
		WriteTs.WriteLine("Begin VB.Form " & FormName)
		
		WriteTs.WriteLine("   Caption         =   """ & FormName & """")
		
		WriteTs.WriteLine("   ClientHeight    =   7920")
		
		WriteTs.WriteLine("   ClientLeft      =   60")
		
		WriteTs.WriteLine("   ClientTop       =   345")
		
		WriteTs.WriteLine("   ClientWidth     =   6930")
		
		WriteTs.WriteLine("   LinkTopic       =   ""frm" & FormName & """")
		
		WriteTs.WriteLine("   MDIChild        =   -1  'True")
		
		WriteTs.WriteLine("   ScaleHeight     =   7920")
		
		WriteTs.WriteLine("   ScaleWidth      =   6930")
		
		WriteTs.WriteLine("   WindowState     =   2  'Maximized")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdFindNext ")
		
		WriteTs.WriteLine("      Caption         =   ""Find &Next""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   1440")
		
		WriteTs.WriteLine("      TabIndex        =   2")
		
		WriteTs.WriteLine("      Top             =   6480")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdFind ")
		
		WriteTs.WriteLine("      Caption         =   ""&Find""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   120")
		
		WriteTs.WriteLine("      TabIndex        =   3")
		
		WriteTs.WriteLine("      Top             =   6480")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.VScrollBar VScroll1 ")
		
		WriteTs.WriteLine("      Height          =   5055")
		
		WriteTs.WriteLine("      Left            =   6600")
		
		WriteTs.WriteLine("      TabIndex        =   4")
		
		WriteTs.WriteLine("      Top             =   240")
		
		WriteTs.WriteLine("      Width           =   255")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdDelete ")
		
		WriteTs.WriteLine("      Caption         =   ""&Delete""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   4080")
		
		WriteTs.WriteLine("      TabIndex        =   6")
		
		WriteTs.WriteLine("      Top             =   6000")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdCancelUpdate ")
		
		WriteTs.WriteLine("      Caption         =   ""&Cancel""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   1440")
		
		WriteTs.WriteLine("      TabIndex        =   7")
		
		WriteTs.WriteLine("      Top             =   6000")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdUpdate ")
		
		WriteTs.WriteLine("      Caption         =   ""&Update""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   2760")
		
		WriteTs.WriteLine("      TabIndex        =   8")
		
		WriteTs.WriteLine("      Top             =   6000")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdAdd ")
		
		WriteTs.WriteLine("      Caption         =   ""&Add New""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   120")
		
		WriteTs.WriteLine("      TabIndex        =   9")
		
		WriteTs.WriteLine("      Top             =   6000")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdTop ")
		
		WriteTs.WriteLine("      Caption         =   ""&Top""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   120")
		
		WriteTs.WriteLine("      TabIndex        =   10")
		
		WriteTs.WriteLine("      Top             =   5520")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdend ")
		
		WriteTs.WriteLine("      Caption         =   ""&End""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   4080")
		
		WriteTs.WriteLine("      TabIndex        =   11")
		
		WriteTs.WriteLine("      Top             =   5520")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdPrevious ")
		
		WriteTs.WriteLine("      Caption         =   ""&Previous""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   1440")
		
		WriteTs.WriteLine("      TabIndex        =   12")
		
		WriteTs.WriteLine("      Top             =   5520")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdnext ")
		
		WriteTs.WriteLine("      Caption         =   ""&Next""")
		
		WriteTs.WriteLine("      Height          =   375")
		
		WriteTs.WriteLine("      Left            =   2760")
		
		WriteTs.WriteLine("      TabIndex        =   13")
		
		WriteTs.WriteLine("      Top             =   5520")
		
		WriteTs.WriteLine("      Width           =   1095")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Frame Frame1 ")
		
		WriteTs.WriteLine("      Caption         =   ""Frame1""")
		
		WriteTs.WriteLine("      Height          =   5175")
		
		WriteTs.WriteLine("      Left            =   120")
		
		WriteTs.WriteLine("      TabIndex        =   0")
		
		WriteTs.WriteLine("      Top             =   120")
		
		WriteTs.WriteLine("      Width           =   6375")
		
		For Fieldidx = 0 To Rs.Fields.Count - 1
			
			lblfield = lblfield & "      Begin VB.TextBox lblfield " & vbCrLf
			lblfield = lblfield & "         BackColor       =   &H8000000F&" & vbCrLf
			lblfield = lblfield & "         BorderStyle     =   0  'None" & vbCrLf
			lblfield = lblfield & "         Height          =   285" & vbCrLf
			lblfield = lblfield & "         Index          =   " & CStr(Fieldidx) & vbCrLf
			lblfield = lblfield & "         Left            =   120" & vbCrLf
			lblfield = lblfield & "         Locked          =   -1  'True" & vbCrLf
			lblfield = lblfield & "         TabIndex        =   5" & vbCrLf
			lblfield = lblfield & "         TabStop         =   0   'False" & vbCrLf
			lblfield = lblfield & "         Text            =   """ & Rs.Fields(Fieldidx).Name & ":""" & vbCrLf
			lblfield = lblfield & "         Top             =   " & CStr(240 + Fieldidx * 480) & vbCrLf
			lblfield = lblfield & "         Width           =   1935" & vbCrLf
			lblfield = lblfield & "      End"
			
			txtfield = txtfield & "      Begin VB.TextBox txtfield " & vbCrLf
			txtfield = txtfield & "         Height          =   285" & vbCrLf
			txtfield = txtfield & "         Index           =   " & CStr(Fieldidx) & vbCrLf
			txtfield = txtfield & "         Left            =   2280" & vbCrLf
			txtfield = txtfield & "         MaxLength       =   " & Rs.Fields(Fieldidx).DefinedSize & vbCrLf
			txtfield = txtfield & "         TabIndex        =   1" & vbCrLf
			txtfield = txtfield & "         Top             =   " & CStr(240 + Fieldidx * 480) & vbCrLf
			txtfield = txtfield & "         Width           =   3375" & vbCrLf
			txtfield = txtfield & "      End"
			
			txtrs = txtrs & vbTab & "With txtfield(" & Fieldidx & ")" & vbCrLf
			txtrs = txtrs & vbTab & vbTab & "Set .DataSource = Rs" & vbCrLf
			txtrs = txtrs & vbTab & vbTab & ".DataField = Rs(" & Fieldidx & ").Name" & vbCrLf
			txtrs = txtrs & vbTab & "end with" & vbCrLf
			
		Next 
		
		WriteTs.WriteLine(lblfield)
		WriteTs.WriteLine(txtfield)
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Label lblrecordcount ")
		
		WriteTs.WriteLine("      Height          =   255")
		
		WriteTs.WriteLine("      Left            =   120")
		
		WriteTs.WriteLine("      TabIndex        =   24")
		
		WriteTs.WriteLine("      Top             =   7560")
		
		WriteTs.WriteLine("      Width           =   6495")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("End")
		
		WriteTs.WriteLine("Attribute VB_Name = """ & FormName & """")
		
		WriteTs.WriteLine("Attribute VB_GlobalNameSpace = False")
		
		WriteTs.WriteLine("Attribute VB_Creatable = False")
		
		WriteTs.WriteLine("Attribute VB_PredeclaredId = True")
		
		WriteTs.WriteLine("Attribute VB_Exposed = False")
		
		WriteTs.WriteLine("''Code Ready " & VB6.Format(Now, "yyyy/MM/dd HH:mm:ss"))
		
		WriteTs.WriteLine("Dim Rs As New ADODB.Recordset")
		
		WriteTs.WriteLine("Dim FindCriteria As String")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdFind_Click()")
		
		WriteTs.WriteLine("    Dim Criteria As String")
		
		WriteTs.WriteLine("    Dim Message As String")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Message = ""Please enter find criteria""")
		
		WriteTs.WriteLine("    Criteria = InputBox(Message, ""Find"", FindCriteria)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If Len(Criteria) = 0 Then")
		
		WriteTs.WriteLine("        Exit Sub")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    FindCriteria = Criteria")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Call Find")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdFindNext_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Call Find")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub Find()")
		
		WriteTs.WriteLine("     ")
		
		WriteTs.WriteLine("    Dim bmark As Variant")
		
		WriteTs.WriteLine("     ")
		
		WriteTs.WriteLine("    bmark = Rs.Bookmark")
		
		WriteTs.WriteLine("    Rs.Find FindCriteria, , adSearchForward, 0")
		
		WriteTs.WriteLine("        ")
		
		WriteTs.WriteLine("    If Rs.EOF = True Then")
		
		WriteTs.WriteLine("        Rs.Bookmark = bmark")
		
		WriteTs.WriteLine("        MsgBox ""No match"", vbInformation")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("Private Sub Form_Load()")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("        Dim SQL As String")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("SQL = """ & Rs.Source & """")
		
		WriteTs.WriteLine("        Rs.open SQL, CN, 1, 3")
		
		WriteTs.WriteLine(txtrs)
		
		WriteTs.WriteLine("        Call SetScrollBar")
		
		WriteTs.WriteLine("        FindCriteria = Rs(0).Name & ""=''""")
		
		WriteTs.WriteLine("        ")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("Private Sub cmdAdd_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Rs.AddNew")
		
		WriteTs.WriteLine("    txtfield(0).SetFocus")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdCancelUpdate_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Rs.CancelUpdate")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdClose_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Unload Me")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdDelete_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If Rs.AbsolutePage > 0 Then")
		
		WriteTs.WriteLine("        Rs.Delete")
		
		WriteTs.WriteLine("        Call SetScrollBar")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdend_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    VScroll1.Value = VScroll1.Max")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdnext_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If Rs.EOF = False Then")
		
		WriteTs.WriteLine("        VScroll1.Value = VScroll1.Value + 1")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdPrevious_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If Rs.BOF = False Then")
		
		WriteTs.WriteLine("        VScroll1.Value = VScroll1.Value - 1")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdTop_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    VScroll1.Value = VScroll1.Min")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdUpdate_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Rs.Update")
		
		WriteTs.WriteLine("    Call SetScrollBar")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("Private Sub Form_Unload(Cancel As Integer)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Rs.Close")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Set Rs = Nothing")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub SetScrollBar()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    With VScroll1")
		
		WriteTs.WriteLine("        .Max = Rs.RecordCount")
		
		WriteTs.WriteLine("        .Value = 0")
		
		WriteTs.WriteLine("    End With")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub VScroll1_Change()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Rs.Move VScroll1.Value, 1")
		
		WriteTs.WriteLine("    Call ShowRecordCount")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub ShowRecordCount()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    lblrecordcount.Caption = Rs.AbsolutePosition & "" / "" & Rs.RecordCount")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.Close()
		
		'UPGRADE_NOTE: Object WriteTs may not be destroyed until it is garbage collected. Click for more: 'ms-help://MS.VSCC.v90/dv_commoner/local/redirect.htm?keyword="6E35BFF6-CD74-4B09-9689-3E1A43DF8969"'
		WriteTs = Nothing
		
		Exit Function
		
ErrorHandler: 
		
		MsgBox(Err.Number & ": " & Err.Description)
		
		
	End Function
	
	Public Function CreateVBProjectMDIForm(ByVal Path As String, ByVal ProjectName As String, ByVal SchemaRs As ADODB.Recordset, ByVal CN As ADODB.Connection) As Boolean
		Dim WriteTs As Scripting.TextStream
		WriteTs = Fso.OpenTextFile(Path & "\MDIForm1.frm", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("VERSION 5.00")
		
		WriteTs.WriteLine("Begin VB.MDIForm MDIForm1 ")
		
		WriteTs.WriteLine("   BackColor       =   &H8000000C&")
		
		WriteTs.WriteLine("   Caption         =   """ & ProjectName & """")
		
		WriteTs.WriteLine("   ClientHeight    =   3090")
		
		WriteTs.WriteLine("   ClientLeft      =   165")
		
		WriteTs.WriteLine("   ClientTop       =   555")
		
		WriteTs.WriteLine("   ClientWidth     =   4680")
		
		WriteTs.WriteLine("   LinkTopic       =   ""MDIForm1""")
		
		WriteTs.WriteLine("   StartUpPosition =   2  'CenterScreen")
		
		WriteTs.WriteLine("   WindowState     =   2  'Maximized")
		
		WriteTs.WriteLine("   Begin VB.Menu MnuFile ")
		
		WriteTs.WriteLine("      Caption         =   ""&File""")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuOpen ")
		
		WriteTs.WriteLine("         Caption         =   ""&Open Form""")
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				WriteTs.WriteLine("         Begin VB.Menu MnuFrm" & SchemaRs.Fields("table_name").Value)
				
				WriteTs.WriteLine("            Caption         =   ""&" & SchemaRs.Fields("table_name").Value & """")
				
				WriteTs.WriteLine("         End")
				
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					WriteTs.WriteLine("         Begin VB.Menu MnuFrm" & SchemaRs.Fields("table_name").Value)
					
					WriteTs.WriteLine("            Caption         =   ""&" & SchemaRs.Fields("table_name").Value & """")
					
					WriteTs.WriteLine("         End")
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuSeparator1 ")
		
		WriteTs.WriteLine("         Caption         =   ""-""")
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuExit ")
		
		WriteTs.WriteLine("         Caption         =   ""E&xit""")
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Menu MnuWindow ")
		
		WriteTs.WriteLine("      Caption         =   ""&Window""")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuTileHorizontally ")
		
		WriteTs.WriteLine("         Caption         =   ""Tile Horizontally""")
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuTileVertically ")
		
		WriteTs.WriteLine("         Caption         =   ""Tile Vertically""")
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("      Begin VB.Menu MnuCascase ")
		
		WriteTs.WriteLine("         Caption         =   ""Cascade""")
		
		WriteTs.WriteLine("      End")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Menu MnuAbout ")
		
		WriteTs.WriteLine("      Caption         =   ""&About""")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("End")
		
		WriteTs.WriteLine("Attribute VB_Name = ""MDIForm1""")
		
		WriteTs.WriteLine("Attribute VB_GlobalNameSpace = False")
		
		WriteTs.WriteLine("Attribute VB_Creatable = False")
		
		WriteTs.WriteLine("Attribute VB_PredeclaredId = True")
		
		WriteTs.WriteLine("Attribute VB_Exposed = False")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MDIForm_Load()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Me.Caption = App.Title")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    CN.open ConnectionString")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MDIForm_QueryUnload(Cancel As Integer, UnloadMode As Integer)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Dim Response As String")
		
		WriteTs.WriteLine("    Dim Message As String")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Message = ""Are you sure to exit program?""")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Response = MsgBox(Message, vbYesNoCancel + vbQuestion)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If Not Response = vbYes Then")
		
		WriteTs.WriteLine("        ")
		
		WriteTs.WriteLine("        Cancel = 1")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Else")
		
		WriteTs.WriteLine("        ")
		
		WriteTs.WriteLine("        End")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MDIForm_Unload(Cancel As Integer)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    CN.Close")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Set CN = Nothing")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MnuAbout_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    frmAbout.Show 1")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MnuExit_Click()")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Unload Me")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		SchemaRs.MoveFirst()
		
		If InStr(1, LCase(CN.ConnectionString), "excel") > 0 Or InStr(1, LCase(CN.ConnectionString), ".xls") > 0 Then
			
			Do Until SchemaRs.EOF
				
				WriteTs.WriteLine("Private Sub MnuFrm" & SchemaRs.Fields("table_name").Value & "_Click()")
				
				WriteTs.WriteLine("    ")
				
				WriteTs.WriteLine("    Dim thisFrm" & SchemaRs.Fields("table_name").Value & "As New Frm" & SchemaRs.Fields("table_name").Value)
				
				WriteTs.WriteLine("    ")
				
				WriteTs.WriteLine("    thisFrm" & SchemaRs.Fields("table_name").Value & ".Show")
				
				WriteTs.WriteLine("    ")
				
				WriteTs.WriteLine("End Sub")
				
				SchemaRs.MoveNext()
				
			Loop 
			
		Else
			
			Do Until SchemaRs.EOF
				'Q300948
				If SchemaRs.Fields("table_type").Value = "TABLE" Then
					
					WriteTs.WriteLine("Private Sub MnuFrm" & SchemaRs.Fields("table_name").Value & "_Click()")
					
					WriteTs.WriteLine("    ")
					
					WriteTs.WriteLine("    Dim thisFrm" & SchemaRs.Fields("table_name").Value & " As New Frm" & SchemaRs.Fields("table_name").Value)
					
					WriteTs.WriteLine("    ")
					
					WriteTs.WriteLine("    thisFrm" & SchemaRs.Fields("table_name").Value & ".Show")
					
					WriteTs.WriteLine("    ")
					
					WriteTs.WriteLine("End Sub")
					
				End If
				
				SchemaRs.MoveNext()
			Loop 
			
		End If
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MnuTileHorizontally_Click()")
		
		WriteTs.WriteLine("    Me.Arrange 1")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MnuTileVertically_Click()")
		
		WriteTs.WriteLine("    Me.Arrange 3")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub MnuCascade_Click()")
		
		WriteTs.WriteLine("    Me.Arrange 0")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.Close()
		
		'UPGRADE_NOTE: Object WriteTs may not be destroyed until it is garbage collected. Click for more: 'ms-help://MS.VSCC.v90/dv_commoner/local/redirect.htm?keyword="6E35BFF6-CD74-4B09-9689-3E1A43DF8969"'
		WriteTs = Nothing
		
	End Function
	
	Public Function CreateVBProjectAboutForm(ByVal Path As String, ByVal ProjectName As String) As Boolean
		
		Dim WriteTs As Scripting.TextStream
		WriteTs = Fso.OpenTextFile(Path & "\frmAbout.frm", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("VERSION 5.00")
		
		WriteTs.WriteLine("Begin VB.Form frmAbout ")
		
		WriteTs.WriteLine("   BorderStyle     =   3  'Fixed Dialog")
		
		WriteTs.WriteLine("   Caption         =   ""About MyApp""")
		
		WriteTs.WriteLine("   ClientHeight    =   3555")
		
		WriteTs.WriteLine("   ClientLeft      =   2340")
		
		WriteTs.WriteLine("   ClientTop       =   1935")
		
		WriteTs.WriteLine("   ClientWidth     =   5730")
		
		WriteTs.WriteLine("   ClipControls    =   0   'False")
		
		WriteTs.WriteLine("   LinkTopic       =   ""Form2""")
		
		WriteTs.WriteLine("   MaxButton       =   0   'False")
		
		WriteTs.WriteLine("   MinButton       =   0   'False")
		
		WriteTs.WriteLine("   ScaleHeight     =   2453.724")
		
		WriteTs.WriteLine("   ScaleMode       =   0  'User")
		
		WriteTs.WriteLine("   ScaleWidth      =   5380.766")
		
		WriteTs.WriteLine("   ShowInTaskbar   =   0   'False")
		
		WriteTs.WriteLine("   StartUpPosition =   2  'CenterScreen")
		
		WriteTs.WriteLine("   Begin VB.PictureBox picIcon ")
		
		WriteTs.WriteLine("      AutoSize        =   -1  'True")
		
		WriteTs.WriteLine("      ClipControls    =   0   'False")
		
		WriteTs.WriteLine("      Height          =   540")
		
		WriteTs.WriteLine("      Left            =   240")
		
		WriteTs.WriteLine("      ScaleHeight     =   337.12")
		
		WriteTs.WriteLine("      ScaleMode       =   0  'User")
		
		WriteTs.WriteLine("      ScaleWidth      =   337.12")
		
		WriteTs.WriteLine("      TabIndex        =   1")
		
		WriteTs.WriteLine("      Top             =   240")
		
		WriteTs.WriteLine("      Width           =   540")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdOK ")
		
		WriteTs.WriteLine("      Cancel          =   -1  'True")
		
		WriteTs.WriteLine("      Caption         =   ""OK""")
		
		WriteTs.WriteLine("      Default         =   -1  'True")
		
		WriteTs.WriteLine("      Height          =   345")
		
		WriteTs.WriteLine("      Left            =   4245")
		
		WriteTs.WriteLine("      TabIndex        =   0")
		
		WriteTs.WriteLine("      Top             =   2625")
		
		WriteTs.WriteLine("      Width           =   1260")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.CommandButton cmdSysInfo ")
		
		WriteTs.WriteLine("      Caption         =   ""&System Info...""")
		
		WriteTs.WriteLine("      Height          =   345")
		
		WriteTs.WriteLine("      Left            =   4260")
		
		WriteTs.WriteLine("      TabIndex        =   2")
		
		WriteTs.WriteLine("      Top             =   3075")
		
		WriteTs.WriteLine("      Width           =   1245")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Line Line1 ")
		
		WriteTs.WriteLine("      BorderColor     =   &H00808080&")
		
		WriteTs.WriteLine("      BorderStyle     =   6  'Inside Solid")
		
		WriteTs.WriteLine("      Index           =   1")
		
		WriteTs.WriteLine("      X1              =   84.515")
		
		WriteTs.WriteLine("      X2              =   5309.398")
		
		WriteTs.WriteLine("      Y1              =   1687.583")
		
		WriteTs.WriteLine("      Y2              =   1687.583")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Label lblDescription ")
		
		WriteTs.WriteLine("      Caption         =   ""App Description""")
		
		WriteTs.WriteLine("      ForeColor       =   &H00000000&")
		
		WriteTs.WriteLine("      Height          =   1170")
		
		WriteTs.WriteLine("      Left            =   1050")
		
		WriteTs.WriteLine("      TabIndex        =   3")
		
		WriteTs.WriteLine("      Top             =   1125")
		
		WriteTs.WriteLine("      Width           =   3885")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Label lblTitle ")
		
		WriteTs.WriteLine("      Caption         =   ""Application Title""")
		
		WriteTs.WriteLine("      ForeColor       =   &H00000000&")
		
		WriteTs.WriteLine("      Height          =   480")
		
		WriteTs.WriteLine("      Left            =   1050")
		
		WriteTs.WriteLine("      TabIndex        =   5")
		
		WriteTs.WriteLine("      Top             =   240")
		
		WriteTs.WriteLine("      Width           =   3885")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Line Line1 ")
		
		WriteTs.WriteLine("      BorderColor     =   &H00FFFFFF&")
		
		WriteTs.WriteLine("      BorderWidth     =   2")
		
		WriteTs.WriteLine("      Index           =   0")
		
		WriteTs.WriteLine("      X1              =   98.6")
		
		WriteTs.WriteLine("      X2              =   5309.398")
		
		WriteTs.WriteLine("      Y1              =   1697.936")
		
		WriteTs.WriteLine("      Y2              =   1697.936")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Label lblVersion ")
		
		WriteTs.WriteLine("      Caption         =   ""Version""")
		
		WriteTs.WriteLine("      Height          =   225")
		
		WriteTs.WriteLine("      Left            =   1050")
		
		WriteTs.WriteLine("      TabIndex        =   6")
		
		WriteTs.WriteLine("      Top             =   780")
		
		WriteTs.WriteLine("      Width           =   3885")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("   Begin VB.Label lblDisclaimer ")
		
		WriteTs.WriteLine("      Caption         =   ""Warning: ...""")
		
		WriteTs.WriteLine("      ForeColor       =   &H00000000&")
		
		WriteTs.WriteLine("      Height          =   825")
		
		WriteTs.WriteLine("      Left            =   255")
		
		WriteTs.WriteLine("      TabIndex        =   4")
		
		WriteTs.WriteLine("      Top             =   2625")
		
		WriteTs.WriteLine("      Width           =   3870")
		
		WriteTs.WriteLine("   End")
		
		WriteTs.WriteLine("End")
		
		WriteTs.WriteLine("Attribute VB_Name = ""frmAbout""")
		
		WriteTs.WriteLine("Attribute VB_GlobalNameSpace = False")
		
		WriteTs.WriteLine("Attribute VB_Creatable = False")
		
		WriteTs.WriteLine("Attribute VB_PredeclaredId = True")
		
		WriteTs.WriteLine("Attribute VB_Exposed = False")
		
		WriteTs.WriteLine("Option Explicit")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("' Reg Key Security Options...")
		
		WriteTs.WriteLine("Const READ_CONTROL = &H20000")
		
		WriteTs.WriteLine("Const KEY_QUERY_VALUE = &H1")
		
		WriteTs.WriteLine("Const KEY_SET_VALUE = &H2")
		
		WriteTs.WriteLine("Const KEY_CREATE_SUB_KEY = &H4")
		
		WriteTs.WriteLine("Const KEY_ENUMERATE_SUB_KEYS = &H8")
		
		WriteTs.WriteLine("Const KEY_NOTIFY = &H10")
		
		WriteTs.WriteLine("Const KEY_CREATE_LINK = &H20")
		
		WriteTs.WriteLine("Const KEY_ALL_ACCESS = KEY_QUERY_VALUE + KEY_SET_VALUE + _")
		
		WriteTs.WriteLine("                       KEY_CREATE_SUB_KEY + KEY_ENUMERATE_SUB_KEYS + _")
		
		WriteTs.WriteLine("                       KEY_NOTIFY + KEY_CREATE_LINK + READ_CONTROL")
		
		WriteTs.WriteLine("                     ")
		
		WriteTs.WriteLine("' Reg Key ROOT Types...")
		
		WriteTs.WriteLine("Const HKEY_LOCAL_MACHINE = &H80000002")
		
		WriteTs.WriteLine("Const ERROR_SUCCESS = 0")
		
		WriteTs.WriteLine("Const REG_SZ = 1                         ' Unicode nul terminated string")
		
		WriteTs.WriteLine("Const REG_DWORD = 4                      ' 32-bit number")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Const gREGKEYSYSINFOLOC = ""SOFTWARE\Microsoft\Shared Tools Location""")
		
		WriteTs.WriteLine("Const gREGVALSYSINFOLOC = ""MSINFO""")
		
		WriteTs.WriteLine("Const gREGKEYSYSINFO = ""SOFTWARE\Microsoft\Shared Tools\MSINFO""")
		
		WriteTs.WriteLine("Const gREGVALSYSINFO = ""PATH""")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Declare Function RegOpenKeyEx Lib ""advapi32"" Alias ""RegOpenKeyExA"" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, ByRef phkResult As Long) As Long")
		
		WriteTs.WriteLine("Private Declare Function RegQueryValueEx Lib ""advapi32"" Alias ""RegQueryValueExA"" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, ByRef lpType As Long, ByVal lpData As String, ByRef lpcbData As Long) As Long")
		
		WriteTs.WriteLine("Private Declare Function RegCloseKey Lib ""advapi32"" (ByVal hKey As Long) As Long")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdSysInfo_Click()")
		
		WriteTs.WriteLine("  Call StartSysInfo")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub cmdOK_Click()")
		
		WriteTs.WriteLine("  Unload Me")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Private Sub Form_Load()")
		
		WriteTs.WriteLine("    Me.Caption = ""About "" & App.Title")
		
		WriteTs.WriteLine("    lblVersion.Caption = ""Version "" & App.Major & ""."" & App.Minor & ""."" & App.Revision")
		
		WriteTs.WriteLine("    lblTitle.Caption = App.Title")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    lblDescription.Caption = ""This program generated by Harvesoft CodeReady, and is protected by copyrights law. """)
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Public Sub StartSysInfo()")
		
		WriteTs.WriteLine("    On Error GoTo SysInfoErr")
		
		WriteTs.WriteLine("  ")
		
		WriteTs.WriteLine("    Dim rc As Long")
		
		WriteTs.WriteLine("    Dim SysInfoPath As String")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    ' Try To Get System Info Program Path\Name From Registry...")
		
		WriteTs.WriteLine("    If GetKeyValue(HKEY_LOCAL_MACHINE, gREGKEYSYSINFO, gREGVALSYSINFO, SysInfoPath) Then")
		
		WriteTs.WriteLine("    ' Try To Get System Info Program Path Only From Registry...")
		
		WriteTs.WriteLine("    ElseIf GetKeyValue(HKEY_LOCAL_MACHINE, gREGKEYSYSINFOLOC, gREGVALSYSINFOLOC, SysInfoPath) Then")
		
		WriteTs.WriteLine("        ' Validate Existance Of Known 32 Bit File Version")
		
		WriteTs.WriteLine("        If (Dir(SysInfoPath & ""\MSINFO32.EXE"") <> """") Then")
		
		WriteTs.WriteLine("            SysInfoPath = SysInfoPath & ""\MSINFO32.EXE""")
		
		WriteTs.WriteLine("            ")
		
		WriteTs.WriteLine("        ' Error - File Can Not Be Found...")
		
		WriteTs.WriteLine("        Else")
		
		WriteTs.WriteLine("            GoTo SysInfoErr")
		
		WriteTs.WriteLine("        End If")
		
		WriteTs.WriteLine("    ' Error - Registry Entry Can Not Be Found...")
		
		WriteTs.WriteLine("    Else")
		
		WriteTs.WriteLine("        GoTo SysInfoErr")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Call Shell(SysInfoPath, vbNormalFocus)")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    Exit Sub")
		
		WriteTs.WriteLine("SysInfoErr:")
		
		WriteTs.WriteLine("    MsgBox ""System Information Is Unavailable At This Time"", vbOKOnly")
		
		WriteTs.WriteLine("End Sub")
		
		WriteTs.WriteLine("")
		
		WriteTs.WriteLine("Public Function GetKeyValue(KeyRoot As Long, KeyName As String, SubKeyRef As String, ByRef KeyVal As String) As Boolean")
		
		WriteTs.WriteLine("    Dim i As Long                                           ' Loop Counter")
		
		WriteTs.WriteLine("    Dim rc As Long                                          ' Return Code")
		
		WriteTs.WriteLine("    Dim hKey As Long                                        ' Handle To An Open Registry Key")
		
		WriteTs.WriteLine("    Dim hDepth As Long                                      '")
		
		WriteTs.WriteLine("    Dim KeyValType As Long                                  ' Data Type Of A Registry Key")
		
		WriteTs.WriteLine("    Dim tmpVal As String                                    ' Tempory Storage For A Registry Key Value")
		
		WriteTs.WriteLine("    Dim KeyValSize As Long                                  ' Size Of Registry Key Variable")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    ' Open RegKey Under KeyRoot {HKEY_LOCAL_MACHINE...}")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    rc = RegOpenKeyEx(KeyRoot, KeyName, 0, KEY_ALL_ACCESS, hKey) ' Open Registry Key")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If (rc <> ERROR_SUCCESS) Then GoTo GetKeyError          ' Handle Error...")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    tmpVal = String$(1024, 0)                             ' Allocate Variable Space")
		
		WriteTs.WriteLine("    KeyValSize = 1024                                       ' Mark Variable Size")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    ' Retrieve Registry Key Value...")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    rc = RegQueryValueEx(hKey, SubKeyRef, 0, _")
		
		WriteTs.WriteLine("                         KeyValType, tmpVal, KeyValSize)    ' Get/Create Key Value")
		
		WriteTs.WriteLine("                        ")
		
		WriteTs.WriteLine("    If (rc <> ERROR_SUCCESS) Then GoTo GetKeyError          ' Handle Errors")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    If (Asc(Mid(tmpVal, KeyValSize, 1)) = 0) Then           ' Win95 Adds Null Terminated String...")
		
		WriteTs.WriteLine("        tmpVal = Left(tmpVal, KeyValSize - 1)               ' Null Found, Extract From String")
		
		WriteTs.WriteLine("    Else                                                    ' WinNT Does NOT Null Terminate String...")
		
		WriteTs.WriteLine("        tmpVal = Left(tmpVal, KeyValSize)                   ' Null Not Found, Extract String Only")
		
		WriteTs.WriteLine("    End If")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    ' Determine Key Value Type For Conversion...")
		
		WriteTs.WriteLine("    '------------------------------------------------------------")
		
		WriteTs.WriteLine("    Select Case KeyValType                                  ' Search Data Types...")
		
		WriteTs.WriteLine("    Case REG_SZ                                             ' String Registry Key Data Type")
		
		WriteTs.WriteLine("        KeyVal = tmpVal                                     ' Copy String Value")
		
		WriteTs.WriteLine("    Case REG_DWORD                                          ' Double Word Registry Key Data Type")
		
		WriteTs.WriteLine("        For i = Len(tmpVal) To 1 Step -1                    ' Convert Each Bit")
		
		WriteTs.WriteLine("            KeyVal = KeyVal + Hex(Asc(Mid(tmpVal, i, 1)))   ' Build Value Char. By Char.")
		
		WriteTs.WriteLine("        Next")
		
		WriteTs.WriteLine("        KeyVal = Format$(""&h"" + KeyVal)                     ' Convert Double Word To String")
		
		WriteTs.WriteLine("    End Select")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("    GetKeyValue = True                                      ' Return Success")
		
		WriteTs.WriteLine("    rc = RegCloseKey(hKey)                                  ' Close Registry Key")
		
		WriteTs.WriteLine("    Exit Function                                           ' Exit")
		
		WriteTs.WriteLine("    ")
		
		WriteTs.WriteLine("GetKeyError:      ' Cleanup After An Error Has Occured...")
		
		WriteTs.WriteLine("    KeyVal = """"                                             ' Set Return Val To Empty String")
		
		WriteTs.WriteLine("    GetKeyValue = False                                     ' Return Failure")
		
		WriteTs.WriteLine("    rc = RegCloseKey(hKey)                                  ' Close Registry Key")
		
		WriteTs.WriteLine("End Function")
		
		WriteTs.Close()
		
		'UPGRADE_NOTE: Object WriteTs may not be destroyed until it is garbage collected. Click for more: 'ms-help://MS.VSCC.v90/dv_commoner/local/redirect.htm?keyword="6E35BFF6-CD74-4B09-9689-3E1A43DF8969"'
		WriteTs = Nothing
		
		
	End Function
	
	
	Private Sub CreateVBProjectLookupForm(ByVal Path As String, ByVal FormName As String, ByVal Rs As ADODB.Recordset)
		
		Dim WriteTs As Scripting.TextStream
		
		Dim Fieldidx As Short
		Dim lblfield As String
		Dim txtfield As String
		
		Dim txtrs As String
		
		Dim FormHeader As String
		Dim FormContent As String
		Dim Line As String
		
		WriteTs = Fso.OpenTextFile(Path & "\" & FormName & ".frm", Scripting.IOMode.ForWriting, True)
		
		WriteTs.WriteLine("VERSION 5.00")
		WriteTs.WriteLine("Object = ""{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.0#0""; ""MSCOMCTL.OCX""")
		WriteTs.WriteLine("Object = ""{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0""; ""comdlg32.ocx""")
		WriteTs.WriteLine("Begin VB.Form " & FormName)
		WriteTs.WriteLine("   Caption         =   """ & FormName & """")
		WriteTs.WriteLine("   ClientHeight    =   7920")
		WriteTs.WriteLine("   ClientLeft      =   60")
		WriteTs.WriteLine("   ClientTop       =   345")
		WriteTs.WriteLine("   ClientWidth     =   6930")
		WriteTs.WriteLine("   LinkTopic       =   """ & FormName & """")
		WriteTs.WriteLine("   MDIChild = -1           'True")
		WriteTs.WriteLine("   ScaleHeight     =   7920")
		WriteTs.WriteLine("   ScaleWidth      =   6930")
		WriteTs.WriteLine("   StartUpPosition =   0 'Manual")
		WriteTs.WriteLine("   Begin MSComDlg.CommonDialog CommonDialog1 ")
		WriteTs.WriteLine("      Left            =   120")
		WriteTs.WriteLine("      Top             =   7320")
		WriteTs.WriteLine("      _ExtentX        =   847")
		WriteTs.WriteLine("      _ExtentY        =   847")
		WriteTs.WriteLine("      _Version        =   393216")
		WriteTs.WriteLine("   End")
		WriteTs.WriteLine("   Begin MSComctlLib.ListView ListView1 ")
		WriteTs.WriteLine("      Height          =   5055")
		WriteTs.WriteLine("      Left            =   120")
		WriteTs.WriteLine("      TabIndex        =   0")
		WriteTs.WriteLine("      Top             =   120")
		WriteTs.WriteLine("      Width           =   6615")
		WriteTs.WriteLine("      _ExtentX        =   11668")
		WriteTs.WriteLine("      _ExtentY        =   8916")
		WriteTs.WriteLine("      View            =   3")
		WriteTs.WriteLine("      LabelEdit       =   1")
		WriteTs.WriteLine("      MultiSelect     =   -1  'True")
		WriteTs.WriteLine("      LabelWrap       =   0   'False")
		WriteTs.WriteLine("      HideSelection   =   0   'False")
		WriteTs.WriteLine("      AllowReorder    =   -1  'True")
		WriteTs.WriteLine("      GridLines       =   -1  'True")
		WriteTs.WriteLine("      _Version        =   393217")
		WriteTs.WriteLine("      ForeColor       =   -2147483640")
		WriteTs.WriteLine("      BackColor       =   -2147483643")
		WriteTs.WriteLine("      BorderStyle     =   1")
		WriteTs.WriteLine("      Appearance      =   1")
		WriteTs.WriteLine("      NumItems        =   " & Rs.Fields.Count)
		
		For Fieldidx = 0 To Rs.Fields.Count - 1
			
			WriteTs.WriteLine("      BeginProperty ColumnHeader(" & CStr(Fieldidx + 1) & ") {BDD1F052-858B-11D1-B16A-00C0F0283628} ")
			WriteTs.WriteLine("         Text            =   """ & Rs.Fields(Fieldidx).Name & """")
			WriteTs.WriteLine("         Object.Width           =   2540")
			WriteTs.WriteLine("      EndProperty")
			
		Next 
		
		WriteTs.WriteLine("   End")
		
		'Menu disabled as it overrides the menu in MDI Form
		'12 December, 2006
		'WriteTs.WriteLine "   Begin VB.Menu MnuPopUpMenu "
		'WriteTs.WriteLine "      Caption         =   ""PopUp Menu"""
		'WriteTs.WriteLine "      Visible         =   0   'False"
		'WriteTs.WriteLine "      Begin VB.Menu MnuFont "
		'WriteTs.WriteLine "         Caption         =   ""Font"""
		'WriteTs.WriteLine "      End"
		'WriteTs.WriteLine "      Begin VB.Menu MnuGrid "
		'WriteTs.WriteLine "         Caption         =   ""Grid"""
		'WriteTs.WriteLine "      End"
		'WriteTs.WriteLine "   End"
		
		WriteTs.WriteLine("End")
		WriteTs.WriteLine("Attribute VB_Name = """ & FormName & """")
		WriteTs.WriteLine("Attribute VB_GlobalNameSpace = False")
		WriteTs.WriteLine("Attribute VB_Creatable = False")
		WriteTs.WriteLine("Attribute VB_PredeclaredId = True")
		WriteTs.WriteLine("Attribute VB_Exposed = False")
		WriteTs.WriteLine("''Code Ready " & VB6.Format(Now, "yyyy/MM/dd HH:mm:ss"))
		WriteTs.WriteBlankLines((2))
		WriteTs.WriteLine("'Please add the following component to run this form")
		WriteTs.WriteLine("'1. Microsoft Common Dialog Control 6.0, comdlg32.OCX")
		WriteTs.WriteLine("'2. Microsoft Windows Common Control 6.0 (SP6), MSCOMCTL.OCX")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Dim Rs As New ADODB.Recordset")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Sub Form_Load()")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("        Dim SQL As String")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("        SQL = """ & Rs.Source & """")
		WriteTs.WriteLine("        Rs.Open SQL, Cn, 1, 3")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("        Call CreateListView(Rs)")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("End Sub")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Sub Form_Unload(Cancel As Integer)")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    Rs.Close")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    Set Rs = Nothing")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("End Sub")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Sub CreateListView(ByVal Rs As ADODB.Recordset)")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("   Dim NewItem As ListItem")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    On Error GoTo ErrorHandler")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    MousePointer = vbHourglass")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    With ListView1")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("        .ListItems.Clear")
		WriteTs.WriteLine("        Do Until Rs.EOF")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("            Set NewItem = .ListItems.Add(Rs.AbsolutePosition, , Rs(0))")
		
		For Fieldidx = 1 To Rs.Fields.Count - 1
			WriteTs.WriteLine("            If IsNull(Rs(" & CStr(Fieldidx) & ")) = False Then")
			WriteTs.WriteLine("                NewItem.SubItems(" & CStr(Fieldidx) & ") = cstr(Rs(" & CStr(Fieldidx) & "))")
			WriteTs.WriteLine("            End If")
		Next 
		
		WriteTs.WriteLine("            Rs.MoveNext")
		WriteTs.WriteLine("        Loop")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("    End With")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    MousePointer = vbDefault")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    Exit Sub")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("ErrorHandler:")
		WriteTs.WriteLine("    MousePointer = vbDefault")
		WriteTs.WriteLine("    MsgBox Err.Description, vbCritical")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("End Sub")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    With ListView1")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("        If .SortKey = ColumnHeader.Index - 1 Then")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("            If .SortOrder = lvwAscending Then")
		WriteTs.WriteLine("                    .SortOrder = lvwDescending")
		WriteTs.WriteLine("            Else")
		WriteTs.WriteLine("                    .SortOrder = lvwAscending")
		WriteTs.WriteLine("            End If")
		WriteTs.WriteLine("                        ")
		WriteTs.WriteLine("        Else")
		WriteTs.WriteLine("            ")
		WriteTs.WriteLine("            .SortKey = ColumnHeader.Index - 1")
		WriteTs.WriteLine("            .SortOrder = lvwAscending")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("        End If")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("        .Sorted = True")
		WriteTs.WriteLine("        ")
		WriteTs.WriteLine("    End With")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("End Sub")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Sub Form_Resize()")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    On Error Resume Next")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("    With ListView1")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("        .Width = Me.Width - 500")
		WriteTs.WriteLine("        .Height = Me.Height - 1000")
		WriteTs.WriteLine("                ")
		WriteTs.WriteLine("    End With")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("End Sub")
		WriteTs.WriteLine("")
		
		'Menu disabled as it overrides the menu in MDI Form
		'12 December, 2006
		
		'WriteTs.WriteLine "Private Sub ListView1_MouseDown(Button As Integer, Shift As Integer, x As Single, y As Single)"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    Select Case Button"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    Case 2"
		'WriteTs.WriteLine "        PopUpMenu MnuPopUpMenu"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    End Select"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "End Sub"
		
		'WriteTs.WriteLine ""
		'WriteTs.WriteLine "Private Sub MnuFont_Click()"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    Call OpenFontDialog(CommonDialog1)"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    With ListView1"
		'WriteTs.WriteLine "        .Font.Name = CommonDialog1.FontName"
		'WriteTs.WriteLine "        .Font.Size = CommonDialog1.FontSize"
		'WriteTs.WriteLine "        .Font.Underline = CommonDialog1.FontUnderline"
		'WriteTs.WriteLine "        .Font.Italic = CommonDialog1.FontItalic"
		'WriteTs.WriteLine "        .ForeColor = CommonDialog1.Color"
		'WriteTs.WriteLine "    End With"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "End Sub"
		'WriteTs.WriteLine ""
		'WriteTs.WriteLine "Private Sub MnuGrid_Click()"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "    ListView1.GridLines = Not ListView1.GridLines"
		'WriteTs.WriteLine "    MnuGrid.Checked = ListView1.GridLines"
		'WriteTs.WriteLine "    "
		'WriteTs.WriteLine "End Sub"
		WriteTs.WriteLine("")
		WriteTs.WriteLine("Private Function OpenFontDialog(ByRef CDL As CommonDialog) As CommonDialog")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("'You may remove this function by adding the Bas_CommDialog.bas")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("On Error Resume Next")
		WriteTs.WriteLine("With CDL")
		WriteTs.WriteLine("    .Flags = 0   'Required before setting FontName")
		WriteTs.WriteLine("    .FontName = ""MS Sans Serif""")
		WriteTs.WriteLine("     .Flags = cdlCFBoth + cdlCFEffects")
		WriteTs.WriteLine("    .CancelError = True")
		WriteTs.WriteLine("    .ShowFont")
		WriteTs.WriteLine("    If Not Err.Number = 0 Then")
		WriteTs.WriteLine("        Exit Function")
		WriteTs.WriteLine("    End If")
		WriteTs.WriteLine("    Set OpenFontDialog = CDL")
		WriteTs.WriteLine("    ")
		WriteTs.WriteLine("End With")
		WriteTs.WriteLine("")
		WriteTs.WriteLine("End Function")
		
		WriteTs.Close()
		
		'UPGRADE_NOTE: Object WriteTs may not be destroyed until it is garbage collected. Click for more: 'ms-help://MS.VSCC.v90/dv_commoner/local/redirect.htm?keyword="6E35BFF6-CD74-4B09-9689-3E1A43DF8969"'
		WriteTs = Nothing
		
	End Sub
End Module